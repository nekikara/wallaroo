language: c

rvm:
  - 2.2.3

notifications:
  email: false
  slack:
    secure: hD69ZlrBGvRhr5FaglkqSgv4XPNZ6XGqsbf75/blj0U6RnYNPSfYMzfuUgcgR5I+vYJoWY5qYaAFqIgQXwExnqATr7Y+UrscLOiy7pT+/WIwIuo0TQLM0XHB50FcXksVC0xlduZIM4UlaQzMvGku5R3NTw6vnCDV9ulQzXFRzyF4yQm+e8mTnCh8lO/d5r8onPqOikTmrXM1QHDYpmP3C/EQeKuIhIUTR4hHeptv02er11z1g+JQHME4uI1GEBOSnyPDYyV/7ATPJCSKcMnVRthX82Qayl6xpu5O0iIRwPeSKykN/FvqNmona4PzcU0K/JpySHhoLhKOhPqiYV329koJuZp5RORsktbYFMfEAJx9+pKNCwWFtEghFgH5HdejEmGJ53VIDxIBG1YgJHndHichEIUZHlC86AXkD0ZUkHWGyZ3g8l64jwTKlKvxJTLux7znTKLcYT8s/czC1/tAadcuF3oQlMBCKTrttRpCwt4pDUEu9N3vaKIZIuAkEY7NsjF3QAH/t44Z4jGPGQMNE10WKeEYCqQJJYoQ73PXhdo16Xobhv6zWly7MpXgImf8KGrw/zqVmEN+SUYdp7JFesmGQyuZ0xH7wJgmxb7oQ+SPnh4mTfUrfMugnUuiyljBLFX6IBn9nO/qpD8HZno7OmF67DDV51RQS1q1NlMPWKA=

branches:
  only:
    - master
    - release
    - /^release-(\d).(\d).(\d)-rc(\d)+$/
    - /^release-(\d).(\d).(\d)$/
    - docker-travis-test

dist: trusty
sudo: required

services: docker

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - LLVM_VERSION="3.9.1"
        - LLVM_CONFIG="llvm-config-3.9"
        - CC1=gcc-5
        - CXX1=g++-5
        - lto=no

before_install:
- echo -e "machine github.com\n  login $CI_USER_TOKEN" >> ~/.netrc

install:
  # Based on how travis-ci works, when this is run, we are in the source
  # directory for Wallaroo. This means, when we go to git clone and install
  # dependencies, we need to leave that directory and then return to it when
  # done.
  # If we clone into the Wallaroo directory, our recursive Makefile will try to
  # build the cloned dependencies and fail
  # If we clone our dependencies into another directory using `cd` and don't
  # return to our starting directory, then our `script` step will fail because
  # its in the wrong directory.
  - export INSTALL_STARTED_AT=`pwd`
  - echo "Installing ponyc";
  - if [ "${TRAVIS_OS_NAME}" = "osx" ];
    then
      brew update;
      brew install ponyc;
    fi;
  - if [ "${TRAVIS_OS_NAME}" = "linux" ];
    then
      sudo apt-get -fy install cpuset;
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys "8756 C4F7 65C9 AC3C B6B8  5D62 379C E192 D401 AB61";
      echo "deb https://dl.bintray.com/pony-language/ponyc-debian pony-language main" | sudo tee -a /etc/apt/sources.list;
      sudo apt-get update;
      sudo apt-get -V install ponyc;
    fi;
  - echo "Installing pony-stable";
  - if [ "${TRAVIS_OS_NAME}" = "linux" ];
    then
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys "D401AB61 DBE1D0A2";
      echo "deb https://dl.bintray.com/pony-language/pony-stable-debian /" | sudo tee -a /etc/apt/sources.list;
      sudo apt-get update;
      sudo apt-get -V install pony-stable;
    fi;
  - if [ "${TRAVIS_OS_NAME}" = "osx" ];
    then
      brew install pony-stable;
    fi;
  - echo "Installing snappy and lz4";
  - if [ "${TRAVIS_OS_NAME}" = "osx" ];
    then
      brew install snappy lz4;
    fi;
  - if [ "${TRAVIS_OS_NAME}" = "linux" ];
    then
      sudo apt-get install libsnappy-dev;
      cd /tmp;
      wget -O liblz4-1.7.5.tar.gz https://github.com/lz4/lz4/archive/v1.7.5.tar.gz;
      tar zxvf liblz4-1.7.5.tar.gz;
      cd lz4-1.7.5;
      sudo make install;
    fi;
  - cd $INSTALL_STARTED_AT
  - if [ "${TRAVIS_OS_NAME}" = "osx" ];
    then
      brew install erlang@18;
      brew link erlang@18 --force;
      cd /tmp;
      mkdir elixir-1.2.6;
      wget https://github.com/elixir-lang/elixir/releases/download/v1.2.6/Precompiled.zip;
      tar -xvf Precompiled.zip -C elixir-1.2.6;
      ln -s /tmp/elixir-1.2.6/bin/elixir /usr/local/bin/elixir;
      ln -s /tmp/elixir-1.2.6/bin/mix /usr/local/bin/mix;
      ln -s /tmp/elixir-1.2.6/bin/iex /usr/local/bin/iex;
      mix local.hex --force;
      mix local.rebar --force;
      cd $INSTALL_STARTED_AT;
    fi;
  - if [ "${TRAVIS_OS_NAME}" = "linux" ];
    then
      wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb;
      sudo dpkg -i erlang-solutions_1.0_all.deb;
      sudo apt-get update;
      sudo apt-get -fy install esl-erlang=1:18.3;
      kiex install 1.2.6;
      kiex use 1.2.6;
      source $HOME/.kiex/elixirs/elixir-1.2.6.env;
      mix local.hex --force;
      mix local.rebar --force;
    fi;
  - echo "Installing pytest";
    sudo python2 -m pip install pytest==3.2.2
  - echo "Installing enum";
    sudo python2 -m pip install --upgrade pip enum34
script:
  - make test debug=true
  # Make sure to run `make clean` between separate test runs to clear any conflicting dependencies
  - make clean
  # Run the correctness tests that require a resilience build
  - make integration-tests-testing-correctness-tests-all resilience=on debug=true
  # Build Docker images
  - if [[ "${TRAVIS_BRANCH}" = "docker-travis-test" ]] && [[ "${TRAVIS_OS_NAME}" = "linux" ]];
    then
      make arch=amd64 release-monhub-all
      docker build -t wallaroo .
    fi;
